{"version":3,"sources":["components/SideMenuMobile.tsx","components/Header.tsx","redux/action.js","redux/types.js","components/Dialog.jsx","components/TaskList.tsx","pages/Home.tsx","components/SnackbarsCustom.jsx","components/TaskEdit.tsx","components/TaskNew.tsx","App.tsx","redux/reducers/dialog.js","redux/reducers/alert.js","redux/reducers/user.js","redux/reducers/task.js","redux/reducers/index.js","redux/sagas/user.saga.js","redux/sagas/task.saga.js","redux/sagas/root.saga.js","redux/store.jsx","index.tsx","config.js"],"names":["useStyles","makeStyles","theme","drawerHeader","display","alignItems","padding","justifyContent","mobileNavLeft","width","textAlign","borderBottom","hotDealsDiv","margin","color","marginLeft","rightButtonsDiv","border","borderRadius","marginRight","rightButton","backgroundColor","rightButtonActive","withRouter","connect","state","props","classes","useState","show","open","setOpen","redirect","setRedirect","activeBtn","setActiveBtn","onClickHandler","path","history","push","buttonStyle","btn","useEffect","window","location","href","SwipeableDrawer","anchor","onClose","onOpen","className","IconButton","onClick","Close","Divider","List","component","aria-label","ListItem","button","ListItemText","primary","src","alt","Button","variant","navRoot","direction","menuUl","listStyle","menuItem","fontWeight","fontSize","menuUlMobile","logoContainer","logoTitleContainer","flexDirection","marginTop","logo","logoImg","telImg","hide","mobileMenuIcon","height","mobileMenuIconContainer","position","top","left","mobileTelDiv","link","textDecoration","cursor","linkTopBar","user","userState","edge","clsx","to","showDialog","dialogData","type","dialog","showAlert","alertData","alert","AlertDialog","this","handlDialog","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","text","DialogActions","buttons","length","map","index","event","label","React","Component","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","headCell","key","align","sortDirection","TableSortLabel","active","property","visuallyHidden","createStyles","root","paper","marginBottom","spacing","table","minWidth","clip","overflow","divDateComplete","desktopTDValue","mobileTDValue","mobileTDTitle","overflowX","alertState","tasks","taskState","taskList","searchTasks","loaded","dialogState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","rows","setRows","localLoad","setLocalLoad","dispatch","useDispatch","handleButton","e","taskId","stopPropagation","console","log","payload","taskDelete","handlCloseDialog","emptyRows","Math","min","formateData","_date","d","Date","getDate","getMonth","getFullYear","Paper","TableContainer","Table","size","target","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","_id","Typography","Grid","container","item","xs","telephone","email","complete","created","removeTaskDialog","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","divTitle","spanTitle","divSearch","inputSearch","outline","newTaskBtn","divTaskCountNewBtn","spanTaskCount","alignSelf","searchText","setSearchText","placeholder","handleSerchText","Search","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","SnackbarsCustom","vertical","horizontal","handleClose","setState","data","Icon","Snackbar","anchorOrigin","autoHideDuration","rootSnackbar","ContentProps","message","icon","iconVariant","action","close","withStyles","green","palette","dark","amber","opacity","unit","taskNewRoot","separatorGrid","labelSpan","gridItem","textfield","right","imageGrid","buttonSave","boxShadow","backgroundImage","outlineOffset","background","checkedIcon","content","nameTaskError","setNameTaskError","telephonTaskError","setTelephonTaskError","emailTaskError","setEmailTaskError","textTaskError","setTextTaskError","filter","t","task","setTask","isValidEmail","RegExp","test","handlOnChange","field","undefined","currentTarget","prev","editTask","setTimeout","sm","FormControlLabel","control","handlOnChangeCB","TextField","isValid","trim","taskUpdate","completeTask","setCompleteTask","nameTask","setNameTask","telephonTask","setTelephonTask","emailTask","setEmailTask","textTask","setTextTask","taskToSave","App","Header","exact","Home","match","TaskEdit","params","TaskNew","initialDialogtState","initialAlertState","initialUserState","usersList","initialTaskState","taskType","combineReducers","includes","sWtUser","sWLoginUser","takeEvery","url","config","server_path","call","fetchDataPost","login","put","reqObj","method","body","JSON","stringify","headers","fetch","response","json","sWtTask","sWTaskList","sWTaskAdd","sWTaskDelete","sWTaskUpdate","ids","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","compose","applyMiddleware","run","ReactDOM","render","document","getElementById","exports"],"mappings":"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","file":"static/js/main.30daa7d1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {Close} from '@material-ui/icons'\r\nimport {IconButton, SwipeableDrawer, List, ListItem, ListItemText, Divider, Button} from '@material-ui/core'\r\nimport { withRouter, RouteComponentProps, } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n    return {\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: '0, 8',            \r\n            justifyContent: 'flex-start',\r\n        },\r\n        mobileNavLeft: {\r\n            width: '250px',\r\n            '& a':{\r\n                textAlign: 'center',\r\n                borderBottom: 'solid 1px #ccc',\r\n            }\r\n        },\r\n        hotDealsDiv:{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            margin: '0 auto',\r\n            color: '#000',\r\n            '& img':{\r\n                marginLeft: 3,\r\n            },           \r\n        },\r\n        rightButtonsDiv: {\r\n            width: 150,\r\n            padding: 3,\r\n            border: 'solid 2px #ccc',\r\n            borderRadius: 5,\r\n            marginRight: 50,\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n        },\r\n        rightButton: {           \r\n            backgroundColor: '#fff',\r\n            color: '#000',\r\n            '&:hover':{\r\n                 backgroundColor:'#70c396'\r\n            }\r\n         },\r\n         rightButtonActive: {           \r\n             backgroundColor: '#4dad79',\r\n             color: '#fff',\r\n         },\r\n    }\r\n})\r\n\r\nexport interface SideMenuMobileProps{\r\n    show: boolean\r\n    onClose: Function      \r\n}\r\n\r\ntype Props = SideMenuMobileProps & RouteComponentProps\r\n\r\nconst SideMenuMobile: React.FC<Props> = (props) => {\r\n    const classes = useStyles(); \r\n    const [open, setOpen] = useState(props.show);\r\n    const [redirect, setRedirect] = useState(\"\");\r\n    const [activeBtn, setActiveBtn] = useState('residence') \r\n    \r\n    const onClickHandler = (path: string) =>{       \r\n         props.history.push(path)\r\n    }\r\n\r\n    const closeDrawer = () =>{       \r\n        setOpen(false)\r\n        props.onClose()       \r\n    }\r\n\r\n    const buttonStyle = (btn: string) => {\r\n        if(btn === activeBtn){\r\n            return classes.rightButton +' '+ classes.rightButtonActive\r\n        }else{\r\n            return classes.rightButton\r\n        }\r\n      } \r\n\r\n    useEffect(()=>{\r\n        if(redirect !== \"\"){\r\n            window.location.href = redirect\r\n        }         \r\n        setOpen(props.show)        \r\n    }, [redirect, props.show])\r\n    \r\n    return(\r\n        <SwipeableDrawer anchor='left' open={open} onClose={()=> setOpen(false) } onOpen={()=> setOpen(true) }>\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={closeDrawer}>\r\n                    <Close />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List component=\"nav\" className={classes.mobileNavLeft} aria-label=\"secondary mailbox folders\">\r\n                <ListItem button component=\"a\" href=\"tel:077-9985041\">\r\n                    <ListItemText primary=\"077-9985041\" />\r\n                </ListItem>\r\n                <ListItem button component=\"a\" href=\"#\" onClick={() => setRedirect(\"/\")}>\r\n                    <ListItemText primary=\"מועדפים\" />\r\n                </ListItem>\r\n                <ListItem button component=\"a\" href=\"#\" onClick={() => setRedirect(\"/\")}>\r\n                    <ListItemText primary=\"מחשבון שטחים\" />\r\n                </ListItem>\r\n                <ListItem button component=\"a\" href=\"#\" onClick={() => onClickHandler(\"/\")}>\r\n                    <ListItemText primary=\"הוספת נכס\" />\r\n                </ListItem> \r\n                <ListItem button component=\"a\" href=\"#\" onClick={() => onClickHandler(\"/\")}>\r\n                    <ListItemText primary=\"תגמול שותפים\" />\r\n                </ListItem>  \r\n                <ListItem button component=\"a\" href=\"#\" onClick={() => onClickHandler(\"/\")}>\r\n                    <ListItemText primary=\"קבל הצעות אישיות\" />\r\n                </ListItem>\r\n                <ListItem button component=\"a\" href=\"#\" onClick={() => onClickHandler(\"/\")}>\r\n                    <div className={classes.hotDealsDiv}>\r\n                        <img src=\"/images/fire.jpg\" alt=\"לדילים חמים\"/>\r\n                        לדילים חמים \r\n                    </div>\r\n                </ListItem>\r\n                <ListItem onClick={() => onClickHandler(\"/\")}>\r\n                    <div className={classes.rightButtonsDiv}>\r\n                        <Button variant=\"contained\" color=\"primary\" className={buttonStyle('commercial')} onClick={()=>{setActiveBtn('commercial')}}>מסחרי</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className={buttonStyle('residence')} onClick={()=>{setActiveBtn('residence')}}>מגורים</Button>\r\n                    </div>  \r\n                </ListItem>          \r\n            </List>\r\n        </SwipeableDrawer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {    \r\n    return {     \r\n      \r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(SideMenuMobile))","import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport {IconButton, Theme, Button} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport clsx from 'clsx'\r\nimport { connect} from 'react-redux'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport SideMenuMobile from '../components/SideMenuMobile'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n    return {\r\n        navRoot:{           \r\n            display:'flex',\r\n            direction: 'ltr',          \r\n        },\r\n        menuUl:{\r\n            listStyle: 'none',\r\n            marginLeft: 'auto',\r\n            padding: 0,\r\n            display: 'flex',\r\n            direction: 'rtl',           \r\n            alignItems: 'center',\r\n        },\r\n        menuItem: {\r\n            margin: 'auto 10px',\r\n            fontWeight: 700,\r\n            fontSize: '11pt',\r\n        },\r\n        menuUlMobile:{\r\n            listStyle: 'none',\r\n            display: 'none',\r\n        },\r\n        logoContainer: {           \r\n            marginLeft: 25,\r\n            display: 'flex',\r\n            alignItems: 'center',           \r\n        },\r\n        logoTitleContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            marginTop: '-24px',\r\n        },\r\n        logo: {\r\n            fontSize: '24px',\r\n            fontWeight: 'bold',\r\n            color: 'red',         \r\n        },\r\n        logoImg: {            \r\n            width: '170px',\r\n            marginRight: 10,\r\n        },\r\n        telImg: {            \r\n            width: '155px',            \r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        mobileMenuIcon: {\r\n            width: 42,\r\n            height: 42,\r\n            color: '#4dad79',\r\n        },\r\n        mobileMenuIconContainer:{\r\n            position: 'absolute',\r\n            top: 10,\r\n            left: 10,\r\n            display: 'none',\r\n        },\r\n        mobileTelDiv: {\r\n            fontSize: '2rem',\r\n            marginTop: '13px',\r\n            marginLeft: '20px',\r\n            fontWeight: 500\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: '0, 8',            \r\n            justifyContent: 'flex-start',\r\n        },\r\n        link: {\r\n            textDecoration: 'none', \r\n            cursor: 'pointer'\r\n        },\r\n        linkTopBar: {\r\n            cursor: 'pointer',\r\n            color: '#797979',\r\n            textDecoration: 'unset',\r\n            '&:hover':{\r\n              textDecoration: 'underline',\r\n            }\r\n        },\r\n        mobileNavLeft: {\r\n            width: '250px',\r\n            '& a':{\r\n                textAlign: 'center',\r\n                borderBottom: 'solid 1px #ccc',\r\n            }\r\n        },\r\n        rightButtonsDiv: {\r\n            width: 150,\r\n            padding: 3,\r\n            border: 'solid 2px #ccc',\r\n            borderRadius: 5,\r\n            marginRight: 50,\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n        },\r\n        rightButton: {           \r\n           backgroundColor: '#fff',\r\n           color: '#000',\r\n           '&:hover':{\r\n                backgroundColor:'#70c396'\r\n           }\r\n        },\r\n        rightButtonActive: {           \r\n            backgroundColor: '#4dad79',\r\n            color: '#fff',\r\n        },\r\n        hotDealsDiv:{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            '& img':{\r\n                marginLeft: 3,\r\n            }\r\n        },\r\n        '@media (max-width: 1700px)':{\r\n            logoContainer:{\r\n               \r\n            },\r\n            \r\n        },\r\n        '@media (max-width: 1360px)':{\r\n            menuUl:{\r\n                display: 'none',\r\n            },\r\n            mobileMenuIconContainer:{\r\n                display: 'flex',\r\n            },\r\n            logoContainer: {\r\n                \r\n            },\r\n            menuUlMobile:{                \r\n                display: 'block',\r\n            },\r\n        },\r\n        '@media (max-width: 420px)':{\r\n            navRoot:{\r\n                justifyContent: 'space-between',\r\n\r\n            },\r\n            logoContainer: {\r\n                marginLeft: 'unset',\r\n            },\r\n            logoImg:{\r\n                width: 120,\r\n            },\r\n            telImg:{\r\n                width: 140,\r\n                height: 45,\r\n            },\r\n            mobileMenuIconContainer:{\r\n                top: 65,\r\n                left:0,\r\n            }           \r\n        },\r\n    }\r\n})\r\n\r\n\r\nconst NavBar: React.FC =() => {\r\n    const classes = useStyles(); \r\n    const [open, setOpen] = useState(false);    \r\n    const [activeBtn, setActiveBtn] = useState('residence')     \r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose =()=>{\r\n        setOpen(false);\r\n    }\r\n    \r\n    const buttonStyle = (btn: string) => {\r\n        if(btn === activeBtn){\r\n            return classes.rightButton +' '+ classes.rightButtonActive\r\n        }else{\r\n            return classes.rightButton\r\n        }\r\n    } \r\n  \r\n    return(\r\n        <div>\r\n            <div className={classes.mobileMenuIconContainer}>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    edge=\"end\"\r\n                    onClick={handleDrawerOpen}\r\n                    className={clsx(open && classes.hide)}                    \r\n                >\r\n                    <MenuIcon className={classes.mobileMenuIcon}/>\r\n                </IconButton>                \r\n            </div>\r\n            \r\n            <div className={classes.navRoot}>\r\n                <div className={classes.logoContainer}>\r\n                    <Link to='/' className={classes.link}>\r\n                        <img src=\"/images/clients_logo.jpg\" alt=\"\" className={classes.logoImg}/>\r\n                    </Link>                    \r\n                </div> \r\n                <div className={classes.logoContainer}>\r\n                    <Link to='/' className={classes.link}>\r\n                        <img src=\"/images/client_tel.jpg\" alt=\"\" className={classes.telImg}/>\r\n                    </Link>                    \r\n                </div> \r\n                \r\n                <ul className={classes.menuUl}>\r\n                    <li className={classes.menuItem}>\r\n                        <div className={classes.rightButtonsDiv}>\r\n                            <Button variant=\"contained\" color=\"primary\" className={buttonStyle('commercial')} onClick={()=>{setActiveBtn('commercial')}}>מסחרי</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" className={buttonStyle('residence')} onClick={()=>{setActiveBtn('residence')}}>מגורים</Button>\r\n                        </div>                       \r\n                    </li>                   \r\n                    <li className={classes.menuItem}>\r\n                        <Link to=\"/\" className={classes.linkTopBar}>\r\n                            מועדפים\r\n                        </Link>                       \r\n                    </li>\r\n                    <li className={classes.menuItem}>\r\n                        <Link to=\"/\" className={classes.linkTopBar}>\r\n                            מחשבון שטחים   \r\n                        </Link>\r\n                    </li>\r\n                    <li className={classes.menuItem}>\r\n                        <Link to=\"/\" className={classes.linkTopBar}>\r\n                            הוספת נכס  \r\n                        </Link>\r\n                    </li>\r\n                    <li className={classes.menuItem}>\r\n                        <Link to=\"/\" className={classes.linkTopBar}>\r\n                            תגמול שותפים \r\n                        </Link>\r\n                    </li>\r\n                    <li className={classes.menuItem}>\r\n                        <Link to=\"/\" className={classes.linkTopBar}>\r\n                            קבל הצעות אישיות \r\n                        </Link>\r\n                    </li>\r\n                    <li className={classes.menuItem}>\r\n                        <Link to=\"/\" className={classes.linkTopBar}>\r\n                            <div className={classes.hotDealsDiv}>\r\n                                <img src=\"/images/fire.jpg\" alt=\"לדילים חמים\"/>\r\n                                לדילים חמים \r\n                            </div>\r\n                        </Link>\r\n                    </li>                                        \r\n                </ul>\r\n            </div>\r\n            <SideMenuMobile show={open} onClose={handleDrawerClose} />          \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {    \r\n    return {\r\n      user: state.userState.user,     \r\n    }}\r\n\r\nexport default withRouter(connect(mapStateToProps)(NavBar))","import { TASK_EDIT, \r\n    TASK_NEW, \r\n    TASK_REQUEST_LIST,\r\n    TASK_DELETE,\r\n    TASK_UPDATE,   \r\n    USER_SIGNIN,\r\n    USER_SIGNUP,\r\n    USER_REQUEST_LIST,\r\n    USER_DELETE,\r\n    USER_UPDATE,\r\n    SHOW_ALERT,\r\n    SHOW_DIALOG,\r\n    TASK_LOADED,\r\n    TASK_SEARCH,\r\n    TASK_TYPE,\r\n} from './types'\r\n\r\n//task \r\nexport function taskRequestList(){\r\n    return {type: TASK_REQUEST_LIST}\r\n}\r\n\r\nexport function taskAdd(task){\r\n    return {type: TASK_NEW, payload: task}\r\n}\r\n\r\nexport function taskEdit(task){\r\n    return {type: TASK_EDIT, payload: task}\r\n}\r\n\r\nexport function taskUpdate(task){\r\n    return {type: TASK_UPDATE, payload: task}\r\n}\r\n\r\nexport function taskDelete(taskId){\r\n    return {type: TASK_DELETE, payload: taskId}\r\n}\r\n\r\nexport function tasksLoaded(load){\r\n    return {type: TASK_LOADED, payload: load}\r\n}\r\n\r\nexport function taskSearch(text){\r\n    return {type: TASK_SEARCH, payload: text}\r\n}\r\n\r\nexport function taskType(text){\r\n    return {type: TASK_TYPE, payload: text}\r\n}\r\n\r\n\r\n//user\r\nexport function userSignIn(user){\r\n    return {type: USER_SIGNIN, payload: user}\r\n}\r\n\r\nexport function userSignUp(user){\r\n    return {type: USER_SIGNUP, payload: user}\r\n}\r\n\r\nexport function usersRequestList(){\r\n    return {type: USER_REQUEST_LIST}\r\n}\r\n\r\nexport function userUpdate(user){\r\n    return {type: USER_UPDATE, payload: user}\r\n}\r\n\r\nexport function userDelete(userId){\r\n    return {type: USER_DELETE, payload: userId}\r\n}\r\n\r\n//dialog\r\nexport function showDialog(dialogData){\r\n    return {type: SHOW_DIALOG, dialog: dialogData};\r\n}\r\n\r\n//alert\r\nexport function showAlert(alertData){\r\n    return {type: SHOW_ALERT, alert: alertData};\r\n}\r\n","//USER\r\nexport const USER_SIGNIN = 'USER_SIGNIN'\r\nexport const USER_SIGNUP = 'USER_SIGNUP'\r\nexport const USER_REQUEST_LIST = 'USER_REQUEST_LIST'\r\nexport const USER_UPDATE = 'USER_UPDATE'\r\nexport const USER_DELETE = 'USER_DELETE'\r\n\r\n//GENERAL\r\nexport const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const SHOW_DIALOG = 'SHOW_DIALOG'\r\n\r\n//TASK\r\nexport const TASK_REQUEST_LIST = 'TASK_REQUEST_LIST'\r\nexport const TASK_SET_LIST = 'TASK_SET_LIST'\r\nexport const TASK_NEW = 'TASK_NEW'\r\nexport const TASK_EDIT = 'TASK_EDIT'\r\nexport const TASK_UPDATE = 'TASK_UPDATE'\r\nexport const TASK_DELETE = 'TASK_DELETE'\r\nexport const TASK_LOADED = 'TASK_LOADED'\r\nexport const TASK_SEARCH = 'TASK_SEARCH'\r\nexport const TASK_TYPE = 'TASK_TYPE'","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass AlertDialog extends React.Component {\n  render() {\n    let {dialogData, handlDialog} = this.props;\n    return (\n      <div>\n        <Dialog\n          open={dialogData.show}\n          onClose={handlDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{dialogData.title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {dialogData.text }\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            {dialogData.buttons.length !== 0 ?\n              dialogData.buttons.map((btn, index) => \n                <Button onClick={btn.event}>\n                  {btn.label}\n                </Button>\n              ) : ''\n            }\n            <Button onClick={handlDialog} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default AlertDialog;","import React, {useState, useEffect} from 'react'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {Table, \r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TablePagination, \r\n    TableRow, \r\n    TableSortLabel,    \r\n    Typography,\r\n    Paper,\r\n    Checkbox,\r\n    Button,    \r\n    Grid\r\n} from '@material-ui/core'\r\nimport {connect, useDispatch} from 'react-redux'\r\nimport {ITaskEdit} from '../interfaces/Task.interface'\r\nimport {taskRequestList, taskDelete, showDialog} from '../redux/action'\r\nimport {withRouter, RouteComponentProps} from 'react-router-dom'\r\nimport Dialog from '../components/Dialog'\r\n\r\n\r\ninterface Data {\r\n    name: string\r\n    telephone: string \r\n    email: string\r\n    created: string\r\n    actions: string\r\n  }\r\n  \r\n  function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  type Order = 'asc' | 'desc';\r\n  \r\n  function getComparator<Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\n  function stableSort<T>(array: T[], comparator: (a: any, b: any) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  \r\n  interface HeadCell {\r\n    disablePadding: boolean;\r\n    id: keyof Data;\r\n    label: string;\r\n    numeric: boolean;\r\n  }\r\n  \r\n  const headCells: HeadCell[] = [\r\n    { id: 'name', numeric: false, disablePadding: true, label: 'שם משתמש' },\r\n    { id: 'telephone', numeric: true, disablePadding: false, label: 'טלפון' },\r\n    { id: 'email', numeric: true, disablePadding: false, label: 'מייל' },\r\n    { id: 'created', numeric: true, disablePadding: false, label: 'תאריך יצירת משימה' },\r\n    { id: 'actions', numeric: true, disablePadding: false, label: 'פעולות' },\r\n  ];\r\n  \r\n  interface EnhancedTableProps {\r\n    classes: ReturnType<typeof useStyles>;\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n  }\r\n  \r\n  function EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={'right'}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n    \r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        width: '100%',\r\n        '& div.MuiTablePagination-actions': {\r\n          display: 'flex',   \r\n          flexDirection: 'row-reverse',\r\n        }\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n      table: {\r\n        minWidth: 750,\r\n      },\r\n      visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n      },\r\n      divDateComplete:{\r\n        display: 'flex',\r\n        '& span': {\r\n          marginRight: 5\r\n        }\r\n      },\r\n      desktopTDValue:{\r\n        display: 'table-cell',\r\n      },\r\n      mobileTDValue:{\r\n        display: 'none',\r\n      },\r\n      mobileTDTitle:{\r\n\r\n      },\r\n      '@media (max-width: 420px)': {\r\n          table: {\r\n            display: 'block',\r\n            minWidth: 'unset',\r\n            width: '96%',\r\n            margin: '0 auto',\r\n            '& thead': {\r\n              display: 'none',\r\n            },\r\n            '& tbody': {\r\n              display: 'block',\r\n            },\r\n            '& th': {\r\n                display: 'block',\r\n            },\r\n            '& tr': {\r\n                display: 'block',\r\n                marginBottom: 30,\r\n                border: \"solid 1px #ccc\",\r\n                borderRadius: 5,\r\n                padding: 5,\r\n            },\r\n            '& td': {\r\n                display: 'block',\r\n                \r\n            },           \r\n          },\r\n          desktopTDValue:{\r\n            display: 'none !important',\r\n          },\r\n          mobileTDValue:{\r\n            display: 'flex',\r\n          },\r\n          root:{\r\n            overflowX: 'hidden',\r\n          }\r\n\r\n      }\r\n    }),\r\n  );\r\n  \r\n  interface ITaskProps{   \r\n    tasks: ITaskEdit[]\r\n    dialog: any\r\n    loaded: boolean\r\n    searchTasks: ITaskEdit[]\r\n  }\r\n\r\n  type Props = ITaskProps & RouteComponentProps\r\n\r\n  const TaskList:React.FC<Props> = (props) => {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<keyof Data>('name');\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [rows, setRows] = useState<ITaskEdit[]>(props.tasks)\r\n    const [localLoad, setLocalLoad] = useState<boolean>(false)       \r\n\r\n    const dispatch = useDispatch()  \r\n        \r\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\r\n      const isAsc = orderBy === property && order === 'asc';\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    };\r\n  \r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (event.target.checked) {\r\n        const newSelecteds = rows.map((n) => n.name);\r\n        setSelected(newSelecteds);\r\n        return;\r\n      }\r\n      setSelected([]);\r\n    };\r\n    \r\n    type tButton = 'view' | 'edit' | 'delete'\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n      const selectedIndex = selected.indexOf(name);\r\n      let newSelected: string[] = [];\r\n  \r\n      console.log(\"event row: \", event, name)\r\n\r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, name);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          selected.slice(0, selectedIndex),\r\n          selected.slice(selectedIndex + 1),\r\n        );\r\n      }\r\n  \r\n      setSelected(newSelected);\r\n    };\r\n  \r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n  \r\n    const handleButton = (e: React.MouseEvent<unknown>, type: tButton, taskId: string)=>{\r\n      if(e){\r\n        //console.log(\"button on click\", e.target, type)\r\n        e.stopPropagation()\r\n      }\r\n      console.log(\"handleButton 111\", type)\r\n      switch(type){\r\n        case \"view\":\r\n            props.history.push('/task_edit/' + taskId)\r\n          break;\r\n        case \"edit\":\r\n            props.history.push('/task_edit/' + taskId)\r\n          break;\r\n        case \"delete\":\r\n            dispatch(taskDelete(taskId))\r\n            dispatch(taskRequestList())\r\n            handlCloseDialog()\r\n            setLocalLoad(false)            \r\n          break;\r\n      }\r\n    };\r\n\r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n  \r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handlCloseDialog = () => {\r\n      console.log('handlCloseDialog')\r\n      let dialogData = { title: '', text: '', buttons: [], show: false }\r\n      dispatch(showDialog(dialogData));\r\n    }\r\n\r\n    const removeTaskDialog = (e: React.MouseEvent<unknown>, taskId: string) => {      \r\n      console.log('removeTaskDialog')\r\n      const eventBtn = () => { return handleButton(e, 'delete', taskId) }\r\n      e.stopPropagation()\r\n      let dialogData = { \r\n          title: 'למחוק משימה', \r\n          text: 'למחוק משימה ?', \r\n          buttons: [{event: eventBtn, label: 'למחוק משימה'}], \r\n          show: true \r\n      }\r\n      dispatch(showDialog(dialogData));\r\n    }\r\n\r\n    const formateData = (_date: Date)=>{\r\n      let d = new Date(_date)\r\n      return d.getDate() + '.'+ d.getMonth() + '.' + d.getFullYear()\r\n    } \r\n    \r\n    useEffect(()=>{\r\n      //console.log('useEffect loaded: ', localLoad)\r\n      if(!localLoad){\r\n        dispatch(taskRequestList())\r\n        setLocalLoad(true)\r\n        //dispatch(tasksLoaded(true))\r\n      }\r\n      \r\n      //console.log('useEffect tasks: ', props.tasks)\r\n      //console.log('useEffect search text: ', props.searchTasks)\r\n      \r\n      if(props.searchTasks.length !== 0){         \r\n         setRows(props.searchTasks)        \r\n      }else{\r\n        //console.log(\"search tasks 111: \", props.tasks)\r\n        setRows(props.tasks)\r\n      }\r\n      \r\n      // return function cleanup(){\r\n      //   console.log(\"search tasks AAAA: \")\r\n      //   if(props.searchTasks.length !== 0){\r\n      //     dispatch(taskSearch(''))\r\n      //   }        \r\n      // }\r\n    })\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog dialogData={ props.dialog } handlDialog={handlCloseDialog}/>       \r\n        <Paper className={classes.paper}>          \r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? 'small' : 'medium'}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort<ITaskEdit>(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n  \r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, row.name)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row._id}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\" className={classes.desktopTDValue}>\r\n                          <Checkbox\r\n                            checked={isItemSelected}\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell id={labelId} align=\"right\">\r\n                          <Typography component=\"div\" className={classes.desktopTDValue}>\r\n                            {row.name}\r\n                          </Typography>\r\n                          <Grid container spacing={2} className={classes.mobileTDValue}>\r\n                              <Grid item xs={5} className={classes.mobileTDTitle}>\r\n                                  <span>שם משתמש</span>\r\n                              </Grid>\r\n                              <Grid item xs={7} className={''}>\r\n                                  {row.name}\r\n                              </Grid>                            \r\n                          </Grid>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Typography component=\"div\" className={classes.desktopTDValue}>\r\n                            {row.telephone}\r\n                          </Typography>\r\n                          <Grid container spacing={2} className={classes.mobileTDValue}>\r\n                              <Grid item xs={5} className={classes.mobileTDTitle}>\r\n                                  <span>טלפון</span>\r\n                              </Grid>\r\n                              <Grid item xs={7} className={''}>\r\n                                  {row.telephone}\r\n                              </Grid>                            \r\n                          </Grid>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Typography component=\"div\" className={classes.desktopTDValue}>\r\n                              {row.email}\r\n                          </Typography>\r\n                          <Grid container spacing={2} className={classes.mobileTDValue}>\r\n                              <Grid item xs={5} className={classes.mobileTDTitle}>\r\n                                  <span>אמייל</span>\r\n                              </Grid>\r\n                              <Grid item xs={7} className={''}>\r\n                                  {row.email}\r\n                              </Grid>                            \r\n                          </Grid>                          \r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                        <Typography component=\"div\" className={classes.desktopTDValue}>\r\n                            <div className={classes.divDateComplete}>\r\n                              {row.complete ? <img src=\"/images/enable.png\" alt=\"...\"/> : ''}\r\n                              <span>{formateData(row.created)}</span>                              \r\n                            </div>    \r\n                          </Typography>\r\n                          <Grid container spacing={2} className={classes.mobileTDValue}>\r\n                              <Grid item xs={5} className={classes.mobileTDTitle}>\r\n                                  <span>תאריך יצירת משימה</span>\r\n                              </Grid>\r\n                              <Grid item xs={7} className={''}>\r\n                                <div className={classes.divDateComplete}>\r\n                                  {row.complete ? <img src=\"/images/enable.png\" alt=\"...\"/> : ''}\r\n                                  <span>{formateData(row.created)}</span>                              \r\n                                </div> \r\n                              </Grid>                            \r\n                          </Grid>      \r\n                         </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Button onClick={(e) => handleButton(e, \"view\", row._id)}>\r\n                                <img src=\"/images/icon_view.png\" alt=\"צפייה\"/>\r\n                            </Button>\r\n                            <Button onClick={(e)=>handleButton(e, \"edit\", row._id)}>\r\n                                <img src=\"/images/icon_edit.png\" alt=\"עריכה\"/>\r\n                            </Button>\r\n                            <Button onClick={(e)=> removeTaskDialog(e, row._id)}>\r\n                                <img src=\"/images/icon_delete.png\" alt=\"מחיקה\"/>                              \r\n                            </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>       \r\n      </div>\r\n    );\r\n  }\r\n\r\n  const mapStateToProps = (state: any) => {\r\n    //console.log('input state :', state)\r\n    //console.log('input state taskList:', state.taskState.taskList)\r\n    return {        \r\n        alert: state.alertState.alert,\r\n        tasks: state.taskState.taskList,\r\n        searchTasks: state.taskState.searchTasks,\r\n        loaded: state.taskState.loaded,\r\n        dialog: state.dialogState.dialog,\r\n    }   \r\n  }\r\n\r\n  export default withRouter(connect(mapStateToProps)(TaskList))","import React, {useState, ChangeEvent} from 'react'\r\nimport TasksList from '../components/TaskList'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport {Search} from '@material-ui/icons'\r\nimport {IconButton} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport {connect, useDispatch} from 'react-redux'\r\nimport {taskSearch} from '../redux/action'\r\nimport {ITask} from '../interfaces/Task.interface'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    divTitle:{\r\n        textAlign: 'right',\r\n        marginTop: '45px',\r\n    },  \r\n    spanTitle: {\r\n        fontSize: '26pt',\r\n        fontWeight: 'bold',\r\n        color: '#4dad79',\r\n    },\r\n    divSearch: {\r\n        marginTop: 25,\r\n        display: 'flex',\r\n        border: 'solid 1px #ccc',\r\n        borderRadius: '5px',\r\n        alignItems: 'center',\r\n        padding: '0 5px',\r\n    },\r\n    inputSearch: {\r\n        width: '100%',\r\n        height: '30px',\r\n        border: 'unset',\r\n        fontSize: '11pt',\r\n        '&:focus':{\r\n            border: 'unset',\r\n            outline: 'none',\r\n        }\r\n    },\r\n    newTaskBtn: {           \r\n        backgroundColor: '#4dad79',\r\n        color: '#fff',\r\n        display: 'flex',\r\n        padding: '10px 10px',\r\n        borderRadius: 5,\r\n        textDecoration: 'none',\r\n        '&:hover':{\r\n            color: '#000',  \r\n        }\r\n    },\r\n    divTaskCountNewBtn:{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginTop: '40px',\r\n        marginBottom: '15px',        \r\n    },\r\n    spanTaskCount: {\r\n        marginRight: 5,\r\n        alignSelf: 'flex-end',\r\n        fontWeight: 'bold',\r\n    },\r\n    '@media (max-width: 420px)': {\r\n        divTaskCountNewBtn:{\r\n            padding: '0 10px',\r\n        },\r\n        divSearch:{\r\n            margin: '10px 10px',\r\n        },\r\n        divTitle:{\r\n            marginRight: 12,\r\n            marginTop: 20,\r\n        }\r\n        \r\n    }\r\n  })\r\n)\r\n\r\ninterface IPropsHome {\r\n    tasks: ITask[]\r\n}\r\n\r\nconst Home: React.FC<IPropsHome> = (props) => {\r\n    const classes = useStyles()\r\n    const [searchText, setSearchText] = useState<string>()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSerchText = (e: ChangeEvent<HTMLInputElement>) => {\r\n        console.log(\"search input: \", e.target.value)\r\n        setSearchText(e.target.value)\r\n        dispatch(taskSearch(e.target.value))\r\n    }\r\n\r\n    return(\r\n        <div className={'container'}>\r\n            <div className={classes.divTitle}>\r\n                <span className={classes.spanTitle}>ניהול משימות</span>\r\n            </div>            \r\n            <div>\r\n                <div className={classes.divSearch}>\r\n                    <input type=\"text\" className={classes.inputSearch} placeholder=\"חיפוש משימה...\" value={searchText} onChange={(e) => {handleSerchText(e)}}/>\r\n                    <IconButton color=\"inherit\">\r\n                        <Search/>\r\n                    </IconButton>\r\n                </div>                \r\n            </div>\r\n            <div>\r\n                <div className={classes.divTaskCountNewBtn}>\r\n                    <span className={classes.spanTaskCount}>רשימת המשימות שלך ({props.tasks.length})</span>\r\n                    <Link to='/task_new' className={classes.newTaskBtn}>משימה חדשה</Link>                    \r\n                </div>\r\n                <TasksList/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    //console.log('input state :', state)\r\n    //console.log('input state taskList:', state.taskState.taskList)\r\n    return {       \r\n        tasks: state.taskState.taskList,\r\n    }   \r\n  }\r\n\r\nexport default connect(mapStateToProps)(Home);","import React, {Component} from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n\n\nconst styles = theme => ({\n    rootSnackbar:{\n      '& div.MuiSnackbarContent-action': {\n        marginRight: 'auto',\n        marginLeft: 'unset',\n      },\n      '& div.MuiSnackbarContent-message span':{\n        display: 'flex',\n      }\n    },\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginLeft: theme.spacing.unit,\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    close:{\n      marginRight: 'auto'\n    }\n  });\n\nclass SnackbarsCustom extends Component {\n    state = {\n      open: true,\n      vertical: 'top',\n      horizontal: 'center',\n    };\n  \n    handleClose = () => {\n      this.setState({ open: false });      \n      if (typeof this.props.data.event === \"function\"){\n        this.props.data.event();\n      }      \n    };\n\n    render(){\n        const { vertical, horizontal, open } = this.state;\n        const { data, classes } = this.props;\n        const Icon = variantIcon[data.variant];        \n\n        return(\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                onClose={this.handleClose}\n                autoHideDuration={4000}\n                className={classes.rootSnackbar}\n\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                     className: classes[data.variant],\n                }}\n                message={\n                    <span id=\"message-id\">\n                        <Icon className={classes.icon+ ' ' +classes.iconVariant} />\n                        {data.text}\n                    </span>\n                }\n                action={[\n                    <IconButton\n                      key=\"close\"\n                      aria-label=\"Close\"\n                      color=\"inherit\"\n                      className={classes.close}\n                      onClick={this.handleClose}\n                    >\n                      <CloseIcon className={classes.icon} />\n                    </IconButton>,\n                 ]}\n            />\n        );\n    }\n}\n\nexport default withStyles(styles)(SnackbarsCustom);","import React, {useState, useEffect, ChangeEvent} from 'react'\r\nimport {connect, useDispatch} from 'react-redux'\r\nimport { Grid, FormControlLabel, Checkbox, TextField, Button} from '@material-ui/core'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport clsx from 'clsx'\r\nimport { ITask, ITaskEdit } from '../interfaces/Task.interface'\r\nimport { IAlert } from '../interfaces/Alert.interface'\r\nimport {taskUpdate, showAlert, taskRequestList} from '../redux/action'\r\nimport SnackbarsCustom from './SnackbarsCustom'\r\nimport {RouteComponentProps, withRouter } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    taskNewRoot:{\r\n        \r\n    },\r\n    separatorGrid:{\r\n        marginTop: 20,\r\n        marginBottom: 10,\r\n        textAlign: 'center',       \r\n        fontWeight: 'bold',\r\n    },\r\n    labelSpan:{ \r\n        marginTop: '13px',\r\n        fontSize: '17px',\r\n        width: '150px',\r\n    },\r\n    gridItem:{\r\n        display: 'inline-flex' \r\n    },\r\n    textfield: {    \r\n        width: '100%',\r\n        fontSize: '15px',\r\n        '& label.MuiInputLabel-formControl': {\r\n            right: 0,\r\n            left: 'unset',\r\n        }\r\n    },\r\n    margin: {\r\n        margin: 8,\r\n    },\r\n    imageGrid:{\r\n        marginTop: 20,\r\n    },\r\n    buttonSave: {\r\n        margin: 8,\r\n        minWidth: \"140px\",\r\n        fontSize: \"14px\",\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        backgroundColor: '#4dad79',\r\n        '&:hover': {\r\n            backgroundColor: '#4dad79',\r\n            textDecoration: 'underline',\r\n        }\r\n    },\r\n    icon: {\r\n        borderRadius: 3,\r\n        width: 16,\r\n        height: 16,\r\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n        backgroundColor: '#fff',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n        '$root.Mui-focusVisible &': {\r\n          outline: '2px auto rgba(19,124,189,.6)',\r\n          outlineOffset: 2,\r\n        },\r\n        'input:hover ~ &': {\r\n          backgroundColor: '#4dad79',\r\n        },\r\n        'input:disabled ~ &': {\r\n          boxShadow: 'none',\r\n          background: 'rgba(206,217,224,.5)',\r\n        },\r\n      },\r\n      checkedIcon: {\r\n        backgroundColor: '#4dad79',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n        '&:before': {\r\n          display: 'block',\r\n          width: 16,\r\n          height: 16,\r\n          backgroundImage:\r\n            \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n            \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n            \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n          content: '\"\"',\r\n        },\r\n        'input:hover ~ &': {\r\n          backgroundColor: '#4dad79',\r\n        },\r\n      },\r\n      '@media (max-width: 420px)': {\r\n        separatorGrid: {\r\n            marginTop: 70\r\n        }\r\n      }\r\n  })\r\n)\r\n\r\ninterface ITaskProps{   \r\n    alert: IAlert,\r\n    tasks: ITaskEdit[],\r\n    taskId: string    \r\n}\r\n\r\ntype Props = ITaskProps & RouteComponentProps\r\n\r\nconst TaskNew: React.FC<Props> = (props) => {\r\n    const classes = useStyles()\r\n    const [nameTaskError, setNameTaskError] = useState(false)\r\n    const [telephonTaskError, setTelephonTaskError] = useState(false)\r\n    const [emailTaskError, setEmailTaskError] = useState(false)\r\n    const [textTaskError, setTextTaskError] = useState(false)\r\n    const [task, setTask] = useState<ITask>(props.tasks.filter(t => t._id === props.taskId)[0])\r\n    const [localLoad, setLocalLoad] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSaveTask = () => {       \r\n        let isValid:boolean = true\r\n\r\n        if(task.name.trim() === ''){\r\n            setNameTaskError(true)\r\n            isValid = false\r\n        }\r\n        if(!isValidEmail(task.email) || task.email.trim() === ''){\r\n            setEmailTaskError(true)\r\n            isValid = false\r\n        }\r\n        if(task.telephone.trim() === ''){\r\n            setTelephonTaskError(true)\r\n            isValid = false\r\n        }\r\n        if(task.text.trim() === ''){\r\n            setTextTaskError(true)\r\n            isValid = false\r\n        }\r\n\r\n        if(isValid){\r\n            dispatch(taskUpdate(task))\r\n            dispatch(taskRequestList())\r\n            props.history.push('/')\r\n        } \r\n    }\r\n\r\n    const isValidEmail = (email:string) =>{\r\n        const pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        return pattern.test(email);\r\n    }\r\n\r\n    const onAlertClose = () => {\r\n        let alert = {text: '', variant: 'success', show: false, event: ''};\r\n        dispatch(showAlert(alert));\r\n    }\r\n\r\n    const handlOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //console.log(\"handlOnChange: input \",  e.currentTarget.id, e.target.checked)\r\n        //console.log('handle change cb: ', e.target.id, ', ', e.target.checked)\r\n        const field:string = e.currentTarget.id === undefined ? e.currentTarget.name : e.currentTarget.id\r\n        const value: string = e.currentTarget.value\r\n        if(e.target !== null && e.currentTarget.value !== null){\r\n            setTask(prev => ({ ...prev, [field]: value }));    \r\n        }\r\n    }\r\n    \r\n    const handlOnChangeCB = (e: ChangeEvent<HTMLInputElement>) => {        \r\n        console.log('handle change cb: ', e.target.id, ', ', e.target.checked)\r\n        const field: string = e.currentTarget.id === undefined ? e.currentTarget.name : e.currentTarget.id\r\n        const value: boolean = e.currentTarget.checked       \r\n        setTask(prev => ({ ...prev, [field]: value }));    \r\n       \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!localLoad){            \r\n            const editTask = props.tasks.filter(t => t._id === props.taskId)[0]\r\n            setTask(editTask)\r\n            setLocalLoad(true)\r\n            console.log(\"useEffect task: \", task)\r\n        }        \r\n    }, [localLoad, props.tasks, props.taskId, task])\r\n\r\n    if(props.alert.show){\r\n       setTimeout(onAlertClose, 3000)\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            {props.alert.show ? \r\n                <SnackbarsCustom data={props.alert} />\r\n                :''\r\n            }\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={12} xs={12} className={classes.separatorGrid}>\r\n                    <span className={classes.labelSpan}>עריכה משימה</span>\r\n                </Grid>\r\n            </Grid> \r\n            <Grid container spacing={2}>                       \r\n                <Grid item sm={12} className={classes.gridItem}>\r\n                <FormControlLabel\r\n                    control={\r\n                    <Checkbox\r\n                        checked={task?.complete}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => handlOnChangeCB(e)}\r\n                        id=\"complete\"\r\n                        color=\"primary\"                        \r\n                        checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n                        icon={<span className={classes.icon} />}\r\n                    />\r\n                    }\r\n                    label=\"בוצע\"\r\n                />                \r\n                </Grid>\r\n                <Grid item sm={4} xs={12} className={classes.gridItem}>                            \r\n                    <TextField\r\n                        error={nameTaskError}\r\n                        className={classes.margin+' '+classes.textfield}                        \r\n                        label=\"שם משתמש\"\r\n                        value={task?.name}\r\n                        id=\"name\"\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>)  =>  handlOnChange(e)}\r\n                    />           \r\n                </Grid>  \r\n                <Grid item sm={4} xs={12} className={classes.gridItem}>                            \r\n                    <TextField\r\n                        error={telephonTaskError}\r\n                        className={classes.margin+' '+classes.textfield}                        \r\n                        label=\"טלפון\"                                                               \r\n                        value={task?.telephone}\r\n                        id=\"telephone\"\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => handlOnChange(e)}\r\n                    />           \r\n                </Grid>\r\n                <Grid item sm={4} xs={12} className={classes.gridItem}>                            \r\n                    <TextField\r\n                        error={emailTaskError}\r\n                        className={classes.margin+' '+classes.textfield}                        \r\n                        label=\"מייל\"                                \r\n                        value={task?.email}\r\n                        id=\"email\"\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => handlOnChange(e)}\r\n                    />           \r\n                </Grid>\r\n                <Grid item sm={12} xs={12} className={classes.gridItem}>                            \r\n                    <TextField\r\n                        error={textTaskError}\r\n                        className={classes.margin+' '+classes.textfield}                        \r\n                        label=\"משימה\"                                \r\n                        value={task?.text}\r\n                        id=\"text\"\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => handlOnChange(e)}\r\n                    />           \r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} className={classes.imageGrid}>                        \r\n                <Grid item sm={12} xs={12} className={classes.gridItem}>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonSave} onClick={handleSaveTask}>\r\n                        לשמור משימה\r\n                        <SaveIcon />\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {        \r\n        alert: state.alertState.alert,\r\n        tasks: state.taskState.taskList,         \r\n    }   \r\n }\r\n\r\nexport default withRouter(connect(mapStateToProps)(TaskNew))","import React, {useState, ChangeEvent} from 'react'\r\nimport {connect, useDispatch} from 'react-redux'\r\nimport { Grid, FormControlLabel, Checkbox, TextField, Button} from '@material-ui/core'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport clsx from 'clsx'\r\nimport { ITask } from '../interfaces/Task.interface'\r\nimport { IAlert } from '../interfaces/Alert.interface'\r\nimport {taskAdd, showAlert, taskRequestList} from '../redux/action'\r\nimport SnackbarsCustom from './SnackbarsCustom'\r\nimport { RouteComponentProps} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    taskNewRoot:{\r\n        \r\n    },\r\n    separatorGrid:{\r\n        marginTop: 20,\r\n        marginBottom: 10,\r\n        textAlign: 'center',       \r\n        fontWeight: 'bold',\r\n    },\r\n    labelSpan:{ \r\n        marginTop: '13px',\r\n        fontSize: '17px',\r\n        width: '150px',\r\n    },\r\n    gridItem:{\r\n        display: 'inline-flex' \r\n    },\r\n    textfield: {    \r\n        width: '100%',\r\n        fontSize: '15px',\r\n        '& label.MuiInputLabel-formControl': {\r\n            right: 0,\r\n            left: 'unset',\r\n        }\r\n    },\r\n    margin: {\r\n        margin: 8,\r\n    },\r\n    imageGrid:{\r\n        marginTop: 20,\r\n    },\r\n    buttonSave: {\r\n        margin: 8,\r\n        minWidth: \"140px\",\r\n        fontSize: \"14px\",\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        backgroundColor: '#4dad79',\r\n        '&:hover': {\r\n            backgroundColor: '#4dad79',\r\n            textDecoration: 'underline',\r\n        }\r\n    },\r\n    icon: {\r\n        borderRadius: 3,\r\n        width: 16,\r\n        height: 16,\r\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n        backgroundColor: '#fff',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n        '$root.Mui-focusVisible &': {\r\n          outline: '2px auto rgba(19,124,189,.6)',\r\n          outlineOffset: 2,\r\n        },\r\n        'input:hover ~ &': {\r\n          backgroundColor: '#4dad79',\r\n        },\r\n        'input:disabled ~ &': {\r\n          boxShadow: 'none',\r\n          background: 'rgba(206,217,224,.5)',\r\n        },\r\n      },\r\n      checkedIcon: {\r\n        backgroundColor: '#4dad79',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n        '&:before': {\r\n          display: 'block',\r\n          width: 16,\r\n          height: 16,\r\n          backgroundImage:\r\n            \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n            \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n            \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n          content: '\"\"',\r\n        },\r\n        'input:hover ~ &': {\r\n          backgroundColor: '#4dad79',\r\n        },\r\n      },\r\n      '@media (max-width: 420px)': {\r\n        separatorGrid: {\r\n            marginTop: 70\r\n        }\r\n      }\r\n  })\r\n)\r\n\r\ninterface ITaskProps{   \r\n    alert: IAlert\r\n}\r\n\r\ntype Props = ITaskProps & RouteComponentProps\r\n\r\nconst TaskNew: React.FC<Props> = (props) => {\r\n    const classes = useStyles()\r\n    const [completeTask, setCompleteTask] = useState(false)\r\n    const [nameTask, setNameTask] = useState('')\r\n    const [telephonTask, setTelephonTask] = useState('')\r\n    const [emailTask, setEmailTask] = useState('')\r\n    const [textTask, setTextTask] = useState('')\r\n    const [nameTaskError, setNameTaskError] = useState(false)\r\n    const [telephonTaskError, setTelephonTaskError] = useState(false)\r\n    const [emailTaskError, setEmailTaskError] = useState(false)\r\n    const [textTaskError, setTextTaskError] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSaveTask = () => {       \r\n        let isValid:boolean = true\r\n\r\n        if(nameTask.trim() === ''){\r\n            setNameTaskError(true)\r\n            isValid = false\r\n        }\r\n        if(!isValidEmail(emailTask) || emailTask.trim() === ''){\r\n            setEmailTaskError(true)\r\n            isValid = false\r\n        }\r\n        if(telephonTask.trim() === ''){\r\n            setTelephonTaskError(true)\r\n            isValid = false\r\n        }\r\n        if(textTask.trim() === ''){\r\n            setTextTaskError(true)\r\n            isValid = false\r\n        }\r\n\r\n        if(isValid){\r\n            const taskToSave: ITask = {                \r\n                name: nameTask,\r\n                email: emailTask,\r\n                telephone: telephonTask,\r\n                created: new Date(),\r\n                text: textTask,\r\n                complete: false,\r\n                type: '',\r\n            }\r\n\r\n            dispatch(taskAdd(taskToSave))\r\n            dispatch(taskRequestList())\r\n            props.history.push('/')\r\n        } \r\n    }\r\n\r\n    const isValidEmail = (email:string) =>{\r\n        const pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        return pattern.test(email);\r\n    }\r\n\r\n    const onAlertClose = () => {\r\n        let alert = {text: '', variant: 'success', show: false, event: ''};\r\n        dispatch(showAlert(alert));\r\n    }\r\n\r\n    if(props.alert.show){\r\n       setTimeout(onAlertClose, 3000)\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            {props.alert.show ? \r\n                <SnackbarsCustom data={props.alert} />\r\n                :''\r\n            }\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={12} xs={12} className={classes.separatorGrid}>\r\n                    <span className={classes.labelSpan}>משימה חדשה</span>\r\n                </Grid>                        \r\n                <Grid item sm={12} xs={12} className={classes.gridItem}>\r\n                <FormControlLabel\r\n                    control={\r\n                    <Checkbox\r\n                        checked={completeTask}\r\n                        onChange={() => setCompleteTask(!completeTask)}\r\n                        name=\"cbEnable\"\r\n                        color=\"primary\"                        \r\n                        checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n                        icon={<span className={classes.icon} />}\r\n                    />\r\n                    }\r\n                    label=\"בוצע\"\r\n                />                \r\n                </Grid>\r\n                <Grid item sm={4} xs={12} className={classes.gridItem}>                            \r\n                    <TextField\r\n                        error={nameTaskError}\r\n                        className={classes.margin+' '+classes.textfield}                        \r\n                        label=\"שם משתמש\"\r\n                        value={nameTask}                               \r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => { setNameTask(e.target.value); setNameTaskError(false);}}\r\n                    />           \r\n                </Grid>  \r\n                <Grid item sm={4} xs={12} className={classes.gridItem}>                            \r\n                    <TextField\r\n                        error={telephonTaskError}\r\n                        className={classes.margin+' '+classes.textfield}                        \r\n                        label=\"טלפון\"                                                               \r\n                        value={telephonTask}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => { setTelephonTask(e.target.value); setTelephonTaskError(false);}}\r\n                    />           \r\n                </Grid>\r\n                <Grid item sm={4} xs={12} className={classes.gridItem}>                            \r\n                    <TextField\r\n                        error={emailTaskError}\r\n                        className={classes.margin+' '+classes.textfield}                        \r\n                        label=\"מייל\"                                \r\n                        value={emailTask}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => { setEmailTask(e.target.value); setEmailTaskError(false);}}\r\n                    />           \r\n                </Grid>\r\n                <Grid item sm={12} xs={12} className={classes.gridItem}>                            \r\n                    <TextField\r\n                        error={textTaskError}\r\n                        className={classes.margin+' '+classes.textfield}                        \r\n                        label=\"משימה\"                                \r\n                        value={textTask}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => { setTextTask(e.target.value); setTextTaskError(false);}}\r\n                    />           \r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} className={classes.imageGrid}>                        \r\n                <Grid item sm={12} xs={12} className={classes.gridItem}>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonSave} onClick={handleSaveTask}>\r\n                        לשמור משימה\r\n                        <SaveIcon />\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {        \r\n        alert: state.alertState.alert,\r\n    }   \r\n }\r\n\r\nexport default connect(mapStateToProps)(TaskNew);","import React from 'react'\nimport './App.css'\nimport {BrowserRouter, Route, RouteComponentProps } from 'react-router-dom'\nimport Header from './components/Header'\nimport Home from './pages/Home'\nimport TaskEdit from './components/TaskEdit'\nimport TaskNew from './components/TaskNew'\n\ninterface MatchParams {\n  id: string;\n}\n\ninterface MatchProps extends RouteComponentProps<MatchParams> {\n}\n\nfunction App() {\n  return (\n    <BrowserRouter>      \n      <div className=\"App\">\n        <Header/>\n        <Route path='/' exact component={Home} /> \n        <Route path='/task_edit/:id' component={({match}: MatchProps) => { return <TaskEdit taskId = {match.params.id}/> }} />\n        <Route path='/task_new' component={TaskNew} />      \n      </div>    \n    </BrowserRouter>\n  );\n}\nexport default App\n","const initialDialogtState = {\n  dialog: {title: '', text: '', buttons: [], show: false } \n};\n\nexport default function shoppingCart(state = initialDialogtState, action){\n    switch(action.type){\n        case \"SHOW_DIALOG\":\n          return {...state, dialog: action.dialog};\n        default:\n          return state;\n    }    \n    \n}","const initialAlertState = {\n    alert: {text: '', variant: 'success', show: false, event: '' }\n  };\n  \n  export default function alert(state = initialAlertState, action){\n      switch(action.type){\n          case \"SHOW_ALERT\":\n            return {...state, alert: action.alert};\n          default:\n            return state;\n      }    \n  }","import {USER_SIGNIN, USER_REQUEST_LIST} from '../types'\r\n\r\nconst initialUserState = {\r\n  user: null,\r\n  usersList: []\r\n};\r\n\r\nexport default function users(state = initialUserState, action){\r\n    switch(action.type){\r\n        case USER_SIGNIN:\r\n          return {...state, user: action.payload}; \r\n        case USER_REQUEST_LIST:\r\n          return {...state, usersList: action.payload};        \r\n        default:\r\n          return state;\r\n    }   \r\n}","import {TASK_EDIT, TASK_SET_LIST, TASK_LOADED, TASK_SEARCH, TASK_TYPE} from '../types'\r\n\r\nconst initialTaskState = {\r\n  task: null,\r\n  taskList: [],\r\n  loaded: false,\r\n  searchTasks: [],\r\n  taskType: '',\r\n};\r\n\r\nexport default function users(state = initialTaskState, action){\r\n    switch(action.type){\r\n        case TASK_EDIT:\r\n          return {...state, task: action.payload}; \r\n        case TASK_SET_LIST:\r\n          //const dd = {...state, taskList: action.payload, loaded: true};\r\n          //console.log(`task list state ${ JSON.stringify(state)}`)\r\n          return {...state, taskList: action.payload, loaded: true};\r\n        case TASK_LOADED:\r\n            return {...state, loaded: action.payload}; \r\n        case TASK_SEARCH:\r\n          if(action.payload !== ''){\r\n            return {...state, searchTasks: state.taskList.filter(t => t.name.includes(action.payload))};\r\n          }else{\r\n            return {...state, searchTasks: []};\r\n          } \r\n        case TASK_TYPE:\r\n            return {...state, taskType: action.payload};  \r\n        default:\r\n          return state;\r\n    }   \r\n}","import { combineReducers } from 'redux'\r\nimport dialog from './dialog'\r\nimport alert from './alert'\r\nimport user from './user'\r\nimport task from './task'\r\n\r\nexport default combineReducers({\r\n    dialogState: dialog,\r\n    alertState: alert,\r\n    userState: user,\r\n    taskState: task,\r\n})","import {takeEvery, put, call} from 'redux-saga/effects'\r\nimport {USER_SIGNIN, SHOW_ALERT} from './../types'\r\nimport config from '../../config'\r\n\r\nexport function* sWtUser(){\r\n    //console.log('saga start login')\r\n    yield takeEvery(USER_SIGNIN, sWLoginUser)\r\n}\r\n\r\nfunction* sWLoginUser(action){\r\n    //console.log('saga input params: ', action)    \r\n    const url = config.params.server_path + \"/login_user\"    \r\n    const payload = yield call(fetchDataPost, url, action.login)\r\n    //console.log('response login user from server: ', payload)\r\n    if(payload.success){\r\n        yield put({type: USER_SIGNIN, user: payload.data})\r\n    }else{\r\n        const alertData = {text: payload.text, variant: 'error', show: true, event: '' };\r\n        yield put({type: SHOW_ALERT, alert: alertData})       \r\n    }   \r\n}\r\n\r\nasync function fetchDataPost(url, data){\r\n    //console.log('fetch data input params: ', url, ' data: ',  data)\r\n    let reqObj\r\n    if(data !== null){       \r\n        reqObj = { method: 'post', body: JSON.stringify(data), headers: {'Content-Type':'application/json'} }\r\n    }else{\r\n        reqObj = { method: 'post' }\r\n    }    \r\n    const response = await fetch(url, reqObj)\r\n    return await response.json()\r\n}","import {takeEvery, put, call} from 'redux-saga/effects'\r\nimport {SHOW_ALERT, TASK_REQUEST_LIST, TASK_NEW, TASK_SET_LIST, TASK_DELETE, TASK_UPDATE} from './../types'\r\nimport config from '../../config'\r\n\r\nexport function* sWtTask(){\r\n    //console.log('saga start login')\r\n    yield takeEvery(TASK_REQUEST_LIST, sWTaskList)\r\n    yield takeEvery(TASK_NEW, sWTaskAdd)\r\n    yield takeEvery(TASK_DELETE, sWTaskDelete)\r\n    yield takeEvery(TASK_UPDATE, sWTaskUpdate)\r\n}\r\n\r\nfunction* sWTaskList(){\r\n    //yield put() //dispatch to store \r\n    //console.log(`sWTaskList saga`)  \r\n    const url = config.params.server_path + '/tasks_list'\r\n    const payload = yield call(fetchDataPost, url, null)\r\n    if(payload.success){\r\n        yield put({type: TASK_SET_LIST, payload: payload.data})\r\n    }else{\r\n        const alertData = {text: payload.text, variant: 'error', show: true, event: '' };\r\n        yield put({type: SHOW_ALERT, alert: alertData})\r\n    }\r\n}\r\n\r\nfunction* sWTaskAdd(action){\r\n    //console.log(`sWTaskAdd saga`, action.payload)  \r\n    const url = config.params.server_path + '/task_new'\r\n    //const payload = {success: false, text: 'save task succes'};//yield call(fetchDataPost, url, null)\r\n    const payload = yield call(fetchDataPost, url, action.payload)\r\n    if(payload.success){\r\n        //console.log(\"success sWTaskAdd saga: \", payload)\r\n        const alertData = {text: payload.text, variant: 'success', show: true, event: '' };       \r\n        yield put({type: SHOW_ALERT, alert: alertData})\r\n    }else{\r\n        const alertData = {text: payload.text, variant: 'error', show: true, event: '' };\r\n        yield put({type: SHOW_ALERT, alert: alertData})\r\n    }\r\n}\r\n\r\nfunction* sWTaskDelete(action){\r\n    //console.log(`sWTaskDelete saga`, action.payload)  \r\n    const url = config.params.server_path + '/task_delete'\r\n    //const payload = {success: false, text: 'save task succes'};//yield call(fetchDataPost, url, null)\r\n    const payload = yield call(fetchDataPost, url, {ids: [action.payload]})\r\n    if(payload.success){\r\n        //console.log(\"success sWTaskDelete saga: \", payload)\r\n        const alertData = {text: payload.text, variant: 'success', show: true, event: '' };       \r\n        yield put({type: SHOW_ALERT, alert: alertData})\r\n    }else{\r\n        const alertData = {text: payload.text, variant: 'error', show: true, event: '' };\r\n        yield put({type: SHOW_ALERT, alert: alertData})\r\n    }\r\n}\r\n\r\nfunction* sWTaskUpdate(action){\r\n    console.log(`sWTaskUpdate saga`, action.payload)\r\n    const url = config.params.server_path + '/task_update'\r\n    const payload = yield call(fetchDataPost, url, action.payload)\r\n    if(payload.success){\r\n        console.log(\"success sWTaskUpdate saga: \", payload)\r\n        const alertData = {text: payload.text, variant: 'success', show: true, event: '' };       \r\n        yield put({type: SHOW_ALERT, alert: alertData})\r\n    }else{\r\n        const alertData = {text: payload.text, variant: 'error', show: true, event: '' };\r\n        yield put({type: SHOW_ALERT, alert: alertData})\r\n    }\r\n}\r\n\r\nasync function fetchDataPost(url, data){\r\n    //console.log('fetch data input params: ', url, ' data: ',  data)\r\n    let reqObj\r\n    if(data !== null){       \r\n        reqObj = { method: 'post', body: JSON.stringify(data), headers: {'Content-Type':'application/json'} }\r\n    }else{\r\n        reqObj = { method: 'post' }\r\n    }    \r\n    const response = await fetch(url, reqObj)\r\n    return await response.json()\r\n}","import {all} from 'redux-saga/effects'\r\nimport {sWtUser} from './user.saga'\r\nimport {sWtTask} from './task.saga'\r\n\r\nexport default function* rootSaga(){\r\n    yield all([       \r\n        sWtUser(),\r\n        sWtTask()\r\n    ])\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport reducers from './reducers'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas/root.saga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = createStore(reducers, compose(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","exports.params = {\r\n    server_path: \"http://localhost:4000\"    \r\n}\r\n"],"sourceRoot":""}